steps:
- id: 'build spez prod image'
  name: 'gcr.io/cloud-builders/docker'
  args: [ 'build', '-t', 'gcr.io/$PROJECT_ID/$REPO_NAME:$SHORT_SHA', '.' ]
- id: 'push spez prod image'
  name: 'gcr.io/cloud-builders/docker'
  args: [ 'push', 'gcr.io/$PROJECT_ID/$REPO_NAME:$SHORT_SHA' ]
#- id: 'install lpts function'
#  name: 'gcr.io/cloud-builders/gcloud'
#  args:
#  - functions
#  - deploy
#  - lastprocessedtimestamp
#  - --quiet
#  - --runtime=go111
#  - --entry-point=LastProcessedTimestamp
#  - --trigger-topic=updates
#  - --service-account=$_SERVICE_ACCOUNT
#  - --source=functions/lastprocessedtimestamp/.
- id: 'create deployment from template'
  name: bash
  args:
  - '-c'
  - |-
    sed -e 's/IMAGE_TAG/$SHORT_SHA/g' < .cloudbuild-kubernetes/deployment.template.yaml > .cloudbuild-kubernetes/deployment.yaml
    cat .cloudbuild-kubernetes/deployment.yaml
- id: 'deploy spez prod image'
  name: gcr.io/cloud-builders/kubectl
  env:
  - 'KUBECTL_VERSION=1.17'
  - 'CLOUDSDK_COMPUTE_REGION=us-central1'
  - 'CLOUDSDK_CONTAINER_CLUSTER=spez'
  args:
  - apply
  - -f
  - .cloudbuild-kubernetes/deployment.yaml
- id: 'push latest for tagged commits'
  name: 'gcr.io/cloud-builders/docker'
  entrypoint: '/bin/bash'
  args:
  - '-euxc'
  - |-
    if echo $BRANCH_NAME | grep release > /dev/null 2>&1; then
      TAG=$(echo $BRANCH_NAME | sed -e 's/release-//g')
      echo "BRANCH_NAME: $BRANCH_NAME TAG: $$TAG"
      if [ -n "$$TAG" ]; then
        docker tag gcr.io/$PROJECT_ID/$REPO_NAME:$SHORT_SHA gcr.io/$PROJECT_ID/$REPO_NAME:$$TAG
        docker tag gcr.io/$PROJECT_ID/$REPO_NAME:$SHORT_SHA gcr.io/$PROJECT_ID/$REPO_NAME:latest
        docker push gcr.io/$PROJECT_ID/$REPO_NAME:$$TAG
        docker push gcr.io/$PROJECT_ID/$REPO_NAME:latest
      fi
    fi
- id: 'test force'
  name: 'bash'
  args: [ '-c', 'echo force build again, again, again' ]
#images:
#  - 'gcr.io/$PROJECT_ID/$REPO_NAME:$SHORT_SHA'
